{
  "version": 3,
  "sources": ["../../pretty-print-json/dist/pretty-print-json.js"],
  "sourcesContent": ["//! pretty-print-json v3.0.4 ~~ https://pretty-print-json.js.org ~~ MIT License\n\nconst prettyPrintJson = {\n    version: '3.0.4',\n    toHtml(data, options) {\n        const defaults = {\n            indent: 3,\n            lineNumbers: false,\n            linkUrls: true,\n            linksNewTab: true,\n            quoteKeys: false,\n            trailingCommas: true,\n        };\n        const settings = { ...defaults, ...options };\n        const invalidHtml = /[<>&]|\\\\\"/g;\n        const toHtml = (char) => char === '<' ? '&lt;' :\n            char === '>' ? '&gt;' :\n                char === '&' ? '&amp;' :\n                    '&bsol;&quot;';\n        const spanTag = (type, display) => display ? '<span class=json-' + type + '>' + display + '</span>' : '';\n        const buildValueHtml = (value) => {\n            const strType = /^\"/.test(value) && 'string';\n            const boolType = ['true', 'false'].includes(value) && 'boolean';\n            const nullType = value === 'null' && 'null';\n            const type = boolType || nullType || strType || 'number';\n            const urlPattern = /https?:\\/\\/[^\\s\"]+/g;\n            const target = settings.linksNewTab ? ' target=_blank' : '';\n            const makeLink = (link) => `<a class=json-link href=\"${link}\"${target}>${link}</a>`;\n            const display = strType && settings.linkUrls ? value.replace(urlPattern, makeLink) : value;\n            return spanTag(type, display);\n        };\n        const replacer = (match, ...parts) => {\n            const part = { indent: parts[0], key: parts[1], value: parts[2], end: parts[3] };\n            const findName = settings.quoteKeys ? /(.*)(): / : /\"([\\w$]+)\": |(.*): /;\n            const indentHtml = part.indent || '';\n            const keyName = part.key && part.key.replace(findName, '$1$2');\n            const keyHtml = part.key ? spanTag('key', keyName) + spanTag('mark', ': ') : '';\n            const valueHtml = part.value ? buildValueHtml(part.value) : '';\n            const noComma = !part.end || [']', '}'].includes(match.at(-1));\n            const addComma = settings.trailingCommas && match.at(0) === ' ' && noComma;\n            const endHtml = spanTag('mark', addComma ? (part.end ?? '') + ',' : part.end);\n            return indentHtml + keyHtml + valueHtml + endHtml;\n        };\n        const jsonLine = /^( *)(\"[^\"]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([{}[\\],]*)?$/mg;\n        const json = JSON.stringify(data, null, settings.indent) || 'undefined';\n        const html = json.replace(invalidHtml, toHtml).replace(jsonLine, replacer);\n        const makeLine = (line) => `   <li>${line}</li>`;\n        const addLineNumbers = (html) => ['<ol class=json-lines>', ...html.split('\\n').map(makeLine), '</ol>'].join('\\n');\n        return settings.lineNumbers ? addLineNumbers(html) : html;\n    },\n};\nexport { prettyPrintJson };\n"],
  "mappings": ";;;AAEA,IAAM,kBAAkB;AAAA,EACpB,SAAS;AAAA,EACT,OAAO,MAAM,SAAS;AAClB,UAAM,WAAW;AAAA,MACb,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,UAAU;AAAA,MACV,aAAa;AAAA,MACb,WAAW;AAAA,MACX,gBAAgB;AAAA,IACpB;AACA,UAAM,WAAW,EAAE,GAAG,UAAU,GAAG,QAAQ;AAC3C,UAAM,cAAc;AACpB,UAAM,SAAS,CAAC,SAAS,SAAS,MAAM,SACpC,SAAS,MAAM,SACX,SAAS,MAAM,UACX;AACZ,UAAM,UAAU,CAAC,MAAM,YAAY,UAAU,sBAAsB,OAAO,MAAM,UAAU,YAAY;AACtG,UAAM,iBAAiB,CAAC,UAAU;AAC9B,YAAM,UAAU,KAAK,KAAK,KAAK,KAAK;AACpC,YAAM,WAAW,CAAC,QAAQ,OAAO,EAAE,SAAS,KAAK,KAAK;AACtD,YAAM,WAAW,UAAU,UAAU;AACrC,YAAM,OAAO,YAAY,YAAY,WAAW;AAChD,YAAM,aAAa;AACnB,YAAM,SAAS,SAAS,cAAc,mBAAmB;AACzD,YAAM,WAAW,CAAC,SAAS,4BAA4B,IAAI,IAAI,MAAM,IAAI,IAAI;AAC7E,YAAM,UAAU,WAAW,SAAS,WAAW,MAAM,QAAQ,YAAY,QAAQ,IAAI;AACrF,aAAO,QAAQ,MAAM,OAAO;AAAA,IAChC;AACA,UAAM,WAAW,CAAC,UAAU,UAAU;AAClC,YAAM,OAAO,EAAE,QAAQ,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,OAAO,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,EAAE;AAC/E,YAAM,WAAW,SAAS,YAAY,aAAa;AACnD,YAAM,aAAa,KAAK,UAAU;AAClC,YAAM,UAAU,KAAK,OAAO,KAAK,IAAI,QAAQ,UAAU,MAAM;AAC7D,YAAM,UAAU,KAAK,MAAM,QAAQ,OAAO,OAAO,IAAI,QAAQ,QAAQ,IAAI,IAAI;AAC7E,YAAM,YAAY,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI;AAC5D,YAAM,UAAU,CAAC,KAAK,OAAO,CAAC,KAAK,GAAG,EAAE,SAAS,MAAM,GAAG,EAAE,CAAC;AAC7D,YAAM,WAAW,SAAS,kBAAkB,MAAM,GAAG,CAAC,MAAM,OAAO;AACnE,YAAM,UAAU,QAAQ,QAAQ,YAAY,KAAK,OAAO,MAAM,MAAM,KAAK,GAAG;AAC5E,aAAO,aAAa,UAAU,YAAY;AAAA,IAC9C;AACA,UAAM,WAAW;AACjB,UAAM,OAAO,KAAK,UAAU,MAAM,MAAM,SAAS,MAAM,KAAK;AAC5D,UAAM,OAAO,KAAK,QAAQ,aAAa,MAAM,EAAE,QAAQ,UAAU,QAAQ;AACzE,UAAM,WAAW,CAAC,SAAS,UAAU,IAAI;AACzC,UAAM,iBAAiB,CAACA,UAAS,CAAC,yBAAyB,GAAGA,MAAK,MAAM,IAAI,EAAE,IAAI,QAAQ,GAAG,OAAO,EAAE,KAAK,IAAI;AAChH,WAAO,SAAS,cAAc,eAAe,IAAI,IAAI;AAAA,EACzD;AACJ;",
  "names": ["html"]
}
