{
  "version": 3,
  "sources": ["../../recorder-core/src/engine/mp3.js"],
  "sourcesContent": ["/*\nmp3编码器，需带上src/engine/mp3-engine.js引擎使用\nhttps://github.com/xiangyuecn/Recorder\n\n当然最佳推荐使用mp3、wav格式，代码也是优先照顾这两种格式\n浏览器支持情况\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats\n*/\n(function(factory){\n\tvar browser=typeof window==\"object\" && !!window.document;\n\tvar win=browser?window:Object; //非浏览器环境，Recorder挂载在Object下面\n\tvar rec=win.Recorder,ni=rec.i18n;\n\tfactory(rec,ni,ni.$T,browser);\n}(function(Recorder,i18n,$T,isBrowser){\n\"use strict\";\n\nvar SampleS=\"48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000\";\nvar BitS=\"8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 192, 224, 256, 320\";\nRecorder.prototype.enc_mp3={\n\tstable:true,takeEC:\"full\"\n\t,getTestMsg:function(){\n\t\treturn $T(\"Zm7L::采样率范围：{1}；比特率范围：{2}（不同比特率支持的采样率范围不同，小于32kbps时采样率需小于32000）\",0,SampleS,BitS);\n\t}\n};\n\nvar NormalizeSet=function(set){\n\tvar bS=set.bitRate, sS=set.sampleRate,s=sS;\n\tif((\" \"+BitS+\",\").indexOf(\" \"+bS+\",\")==-1){\n\t\tRecorder.CLog($T(\"eGB9::{1}不在mp3支持的取值范围：{2}\",0,\"bitRate=\"+bS,BitS),3);\n\t}\n\tif((\" \"+SampleS+\",\").indexOf(\" \"+sS+\",\")==-1){//engine SmpFrqIndex函数会检测\n\t\tvar arr=SampleS.split(\", \"),vs=[];\n\t\tfor(var i=0;i<arr.length;i++) vs.push({v:+arr[i],s:Math.abs(arr[i]-sS)});\n\t\tvs.sort(function(a,b){return a.s-b.s}); s=vs[0].v;\n\t\t\n\t\tset.sampleRate=s;\n\t\tRecorder.CLog($T(\"zLTa::sampleRate已更新为{1}，因为{2}不在mp3支持的取值范围：{3}\",0,s,sS,SampleS),3);\n\t}\n};\nvar ImportEngineErr=function(){\n\treturn $T.G(\"NeedImport-2\",[\"mp3.js\",\"src/engine/mp3-engine.js\"]);\n};\n//是否支持web worker\nvar HasWebWorker=isBrowser && typeof Worker==\"function\";\n\n\n\n//*******标准UI线程转码支持函数************\n\nRecorder.prototype.mp3=function(res,True,False){\n\t\tvar This=this,set=This.set,size=res.length;\n\t\tif(!Recorder.lamejs){\n\t\t\tFalse(ImportEngineErr()); return;\n\t\t};\n\t\t\n\t\t//优先采用worker编码，非worker时用老方法提供兼容\n\t\tif(HasWebWorker){\n\t\t\tvar ctx=This.mp3_start(set);\n\t\t\tif(ctx){\n\t\t\t\tif(ctx.isW){\n\t\t\t\t\tThis.mp3_encode(ctx,res);\n\t\t\t\t\tThis.mp3_complete(ctx,True,False,1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tThis.mp3_stop(ctx);\n\t\t\t};\n\t\t};\n\t\t\n\t\tNormalizeSet(set);\n\t\t//https://github.com/wangpengfei15975/recorder.js\n\t\t//https://github.com/zhuker/lamejs bug:采样率必须和源一致，不然8k时没有声音，有问题fix：https://github.com/zhuker/lamejs/pull/11\n\t\tvar mp3=new Recorder.lamejs.Mp3Encoder(1,set.sampleRate,set.bitRate);\n\t\t\n\t\tvar blockSize=57600;\n\t\tvar memory=new Int8Array(500000), mOffset=0;\n\t\t\n\t\tvar idx=0,isFlush=0;\n\t\tvar run=function(){\n\t\t\ttry{\n\t\t\t\tif(idx<size){\n\t\t\t\t\tvar buf=mp3.encodeBuffer(res.subarray(idx,idx+blockSize));\n\t\t\t\t}else{\n\t\t\t\t\tisFlush=1;\n\t\t\t\t\tvar buf=mp3.flush();\n\t\t\t\t};\n\t\t\t}catch(e){ //精简代码调用了abort\n\t\t\t\tconsole.error(e);\n\t\t\t\tif(!isFlush) try{ mp3.flush() }catch(r){ console.error(r) }\n\t\t\t\tFalse(\"MP3 Encoder: \"+e.message);\n\t\t\t\treturn;\n\t\t\t};\n\t\t\tvar bufLen=buf.length;\n\t\t\tif(bufLen>0){\n\t\t\t\tif(mOffset+bufLen>memory.length){\n\t\t\t\t\tvar tmp=new Int8Array(memory.length+Math.max(500000,bufLen));\n\t\t\t\t\ttmp.set(memory.subarray(0, mOffset));\n\t\t\t\t\tmemory=tmp;\n\t\t\t\t}\n\t\t\t\tmemory.set(buf,mOffset);\n\t\t\t\tmOffset+=bufLen;\n\t\t\t};\n\t\t\t\n\t\t\tif(idx<size){\n\t\t\t\tidx+=blockSize;\n\t\t\t\tsetTimeout(run);//尽量避免卡ui\n\t\t\t}else{\n\t\t\t\tvar data=[memory.buffer.slice(0,mOffset)];\n\t\t\t\t//去掉开头的标记信息帧\n\t\t\t\tvar meta=mp3TrimFix.fn(data,mOffset,size,set.sampleRate);\n\t\t\t\tmp3TrimFixSetMeta(meta,set);\n\t\t\t\t\n\t\t\t\tTrue(data[0]||new ArrayBuffer(0),\"audio/mp3\");\n\t\t\t};\n\t\t};\n\t\trun();\n\t}\n\n\n//********边录边转码(Worker)支持函数，如果提供就代表可能支持，否则只支持标准转码*********\n\n//全局共享一个Worker，后台串行执行。如果每次都开一个新的，编码速度可能会慢很多，可能是浏览器运行缓存的因素，并且可能瞬间产生多个并行操作占用大量cpu\nvar mp3Worker;\nRecorder.BindDestroy(\"mp3Worker\",function(){\n\tif(mp3Worker){\n\t\tRecorder.CLog(\"mp3Worker Destroy\");\n\t\tmp3Worker.terminate();\n\t\tmp3Worker=null;\n\t};\n});\n\n\nRecorder.prototype.mp3_envCheck=function(envInfo,set){//检查环境下配置是否可用\n\tvar errMsg=\"\";\n\t//需要实时编码返回数据，此时需要检查是否可实时编码\n\tif(set.takeoffEncodeChunk){\n\t\tif(!newContext()){//浏览器不能创建实时编码环境\n\t\t\terrMsg=$T(\"yhUs::当前浏览器版本太低，无法实时处理\");\n\t\t};\n\t};\n\tif(!errMsg && !Recorder.lamejs){\n\t\terrMsg=ImportEngineErr();\n\t};\n\treturn errMsg;\n};\nRecorder.prototype.mp3_start=function(set){//如果返回null代表不支持\n\treturn newContext(set);\n};\nvar openList={id:0};\nvar newContext=function(setOrNull,_badW){\n\t//独立运行的函数，scope.wkScope worker.onmessage 字符串会被替换\n\tvar run=function(e){\n\t\tvar ed=e.data;\n\t\tvar wk_ctxs=scope.wkScope.wk_ctxs;\n\t\tvar wk_lame=scope.wkScope.wk_lame;\n\t\tvar wk_mp3TrimFix=scope.wkScope.wk_mp3TrimFix;\n\t\t\n\t\tvar cur=wk_ctxs[ed.id];\n\t\tif(ed.action==\"init\"){\n\t\t\twk_ctxs[ed.id]={\n\t\t\t\tsampleRate:ed.sampleRate\n\t\t\t\t,bitRate:ed.bitRate\n\t\t\t\t,takeoff:ed.takeoff\n\t\t\t\t\n\t\t\t\t,pcmSize:0\n\t\t\t\t,memory:new Int8Array(500000), mOffset:0\n\t\t\t\t,encObj:new wk_lame.Mp3Encoder(1,ed.sampleRate,ed.bitRate)\n\t\t\t};\n\t\t}else if(!cur){\n\t\t\treturn;\n\t\t};\n\t\tvar addBytes=function(buf){\n\t\t\tvar bufLen=buf.length;\n\t\t\tif(cur.mOffset+bufLen>cur.memory.length){\n\t\t\t\tvar tmp=new Int8Array(cur.memory.length+Math.max(500000,bufLen));\n\t\t\t\ttmp.set(cur.memory.subarray(0, cur.mOffset));\n\t\t\t\tcur.memory=tmp;\n\t\t\t}\n\t\t\tcur.memory.set(buf,cur.mOffset);\n\t\t\tcur.mOffset+=bufLen;\n\t\t};\n\t\t\n\t\tswitch(ed.action){\n\t\tcase \"stop\":\n\t\t\tif(!cur.isCp) try{ cur.encObj.flush() }catch(e){ console.error(e) }\n\t\t\tcur.encObj=null;\n\t\t\tdelete wk_ctxs[ed.id];\n\t\t\tbreak;\n\t\tcase \"encode\":\n\t\t\tif(cur.isCp)break;\n\t\t\tcur.pcmSize+=ed.pcm.length;\n\t\t\ttry{\n\t\t\t\tvar buf=cur.encObj.encodeBuffer(ed.pcm);\n\t\t\t}catch(e){ //精简代码调用了abort\n\t\t\t\tcur.err=e;\n\t\t\t\tconsole.error(e);\n\t\t\t};\n\t\t\tif(buf && buf.length>0){\n\t\t\t\tif(cur.takeoff){\n\t\t\t\t\tworker.onmessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t}else{\n\t\t\t\t\taddBytes(buf);\n\t\t\t\t};\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"complete\":\n\t\t\tcur.isCp=1;\n\t\t\ttry{\n\t\t\t\tvar buf=cur.encObj.flush();\n\t\t\t}catch(e){ //精简代码调用了abort\n\t\t\t\tcur.err=e;\n\t\t\t\tconsole.error(e);\n\t\t\t};\n\t\t\tif(buf && buf.length>0){\n\t\t\t\tif(cur.takeoff){\n\t\t\t\t\tworker.onmessage({action:\"takeoff\",id:ed.id,chunk:buf});\n\t\t\t\t}else{\n\t\t\t\t\taddBytes(buf);\n\t\t\t\t};\n\t\t\t};\n\t\t\tif(cur.err){\n\t\t\t\tworker.onmessage({action:ed.action,id:ed.id\n\t\t\t\t\t,err:\"MP3 Encoder: \"+cur.err.message});\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\t\n\t\t\tvar data=[cur.memory.buffer.slice(0,cur.mOffset)];\n\t\t\t//去掉开头的标记信息帧\n\t\t\tvar meta=wk_mp3TrimFix.fn(data,cur.mOffset,cur.pcmSize,cur.sampleRate);\n\t\t\t\n\t\t\tworker.onmessage({\n\t\t\t\taction:ed.action\n\t\t\t\t,id:ed.id\n\t\t\t\t,blob:data[0]||new ArrayBuffer(0)\n\t\t\t\t,meta:meta\n\t\t\t});\n\t\t\tbreak;\n\t\t};\n\t};\n\t\n\tvar initOnMsg=function(isW){\n\t\tworker.onmessage=function(e){\n\t\t\tvar data=e; if(isW)data=e.data;\n\t\t\tvar ctx=openList[data.id];\n\t\t\tif(ctx){\n\t\t\t\tif(data.action==\"takeoff\"){\n\t\t\t\t\t//取走实时生成的mp3数据\n\t\t\t\t\tctx.set.takeoffEncodeChunk(new Uint8Array(data.chunk.buffer));\n\t\t\t\t}else{\n\t\t\t\t\t//complete\n\t\t\t\t\tctx.call&&ctx.call(data);\n\t\t\t\t\tctx.call=null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n\tvar initCtx=function(){\n\t\tvar ctx={worker:worker,set:setOrNull};\n\t\tif(setOrNull){\n\t\t\tctx.id=++openList.id;\n\t\t\topenList[ctx.id]=ctx;\n\t\t\t\n\t\t\tNormalizeSet(setOrNull);\n\t\t\t\n\t\t\tworker.postMessage({\n\t\t\t\taction:\"init\"\n\t\t\t\t,id:ctx.id\n\t\t\t\t,sampleRate:setOrNull.sampleRate\n\t\t\t\t,bitRate:setOrNull.bitRate\n\t\t\t\t,takeoff:!!setOrNull.takeoffEncodeChunk\n\t\t\t\t\n\t\t\t\t,x:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t}else{\n\t\t\tworker.postMessage({\n\t\t\t\tx:new Int16Array(5)//低版本浏览器不支持序列化TypedArray\n\t\t\t});\n\t\t};\n\t\treturn ctx;\n\t};\n\tvar scope,worker=mp3Worker;\n\t\n\t//非浏览器，不支持worker，或者开启失败，使用UI线程处理\n\tif(_badW || !HasWebWorker){\n\t\tRecorder.CLog($T(\"k9PT::当前环境不支持Web Worker，mp3实时编码器运行在主线程中\"),3);\n\t\tworker={ postMessage:function(ed){ run({data:ed}); } };\n\t\tscope={wkScope:{\n\t\t\twk_ctxs:{}, wk_lame:Recorder.lamejs, wk_mp3TrimFix:mp3TrimFix\n\t\t}};\n\t\tinitOnMsg();\n\t\treturn initCtx();\n\t};\n\t\n\ttry{\n\t\tif(!worker){\n\t\t\t//创建一个新Worker\n\t\t\tvar onmsg=(run+\"\").replace(/[\\w\\$]+\\.onmessage/g,\"self.postMessage\");\n\t\t\tonmsg=onmsg.replace(/[\\w\\$]+\\.wkScope/g,\"wkScope\");\n\t\t\tvar jsCode=\");wk_lame();self.onmessage=\"+onmsg;\n\t\t\tjsCode+=\";var wkScope={ wk_ctxs:{},wk_lame:wk_lame\";\n\t\t\tjsCode+=\",wk_mp3TrimFix:{rm:\"+mp3TrimFix.rm+\",fn:\"+mp3TrimFix.fn+\"} }\";\n\t\t\t\n\t\t\tvar lamejsCode=Recorder.lamejs.toString();\n\t\t\tvar url=(window.URL||webkitURL).createObjectURL(new Blob([\"var wk_lame=(\",lamejsCode,jsCode], {type:\"text/javascript\"}));\n\t\t\t\n\t\t\tworker=new Worker(url);\n\t\t\tsetTimeout(function(){\n\t\t\t\t(window.URL||webkitURL).revokeObjectURL(url);//必须要释放，不然每次调用内存都明显泄露内存\n\t\t\t},10000);//chrome 83 file协议下如果直接释放，将会使WebWorker无法启动\n\t\t\tinitOnMsg(1);\n\t\t};\n\t\t\n\t\tvar ctx=initCtx(); ctx.isW=1;\n\t\tmp3Worker=worker;\n\t\treturn ctx;\n\t}catch(e){//出错了就不要提供了\n\t\tworker&&worker.terminate();\n\t\tconsole.error(e);\n\t\treturn newContext(setOrNull, 1);//切换到UI线程处理\n\t};\n};\nRecorder.prototype.mp3_stop=function(startCtx){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"stop\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t\tstartCtx.worker=null;\n\t\tdelete openList[startCtx.id];\n\t\t\n\t\t//疑似泄露检测 排除id\n\t\tvar opens=-1;\n\t\tfor(var k in openList){\n\t\t\topens++;\n\t\t};\n\t\tif(opens){\n\t\t\tRecorder.CLog($T(\"fT6M::mp3 worker剩{1}个未stop\",0,opens),3);\n\t\t};\n\t};\n};\nRecorder.prototype.mp3_encode=function(startCtx,pcm){\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"encode\"\n\t\t\t,id:startCtx.id\n\t\t\t,pcm:pcm\n\t\t});\n\t};\n};\nRecorder.prototype.mp3_complete=function(startCtx,True,False,autoStop){\n\tvar This=this;\n\tif(startCtx&&startCtx.worker){\n\t\tstartCtx.call=function(data){\n\t\t\tif(autoStop){\n\t\t\t\tThis.mp3_stop(startCtx);\n\t\t\t};\n\t\t\tif(data.err){\n\t\t\t\tFalse(data.err);\n\t\t\t}else{\n\t\t\t\tmp3TrimFixSetMeta(data.meta,startCtx.set);\n\t\t\t\tTrue(data.blob,\"audio/mp3\");\n\t\t\t};\n\t\t};\n\t\tstartCtx.worker.postMessage({\n\t\t\taction:\"complete\"\n\t\t\t,id:startCtx.id\n\t\t});\n\t}else{\n\t\tFalse($T(\"mPxH::mp3编码器未start\"));\n\t};\n};\n\n\n\n\n\n\n\n//*******辅助函数************\n\n/*读取lamejs编码出来的mp3信息，只能读特定格式，如果读取失败返回null\nmp3Buffers=[ArrayBuffer,...]\nlength=mp3Buffers的数据二进制总长度\n*/\nRecorder.mp3ReadMeta=function(mp3Buffers,length){\n\t//kill babel-polyfill ES6 Number.parseInt 不然放到Worker里面找不到方法，也不能用typeof(x)==object 会被替换成 _typeof\n\tvar parseInt_ES3=typeof(window)!=\"undefined\"&&window.parseInt||typeof(self)!=\"undefined\"&&self.parseInt||parseInt;\n\t\n\tvar u8arr0=new Uint8Array(mp3Buffers[0]||[]);\n\tif(u8arr0.length<4){\n\t\treturn null;\n\t};\n\tvar byteAt=function(idx,u8){\n\t\treturn (\"0000000\"+((u8||u8arr0)[idx]||0).toString(2)).substr(-8);\n\t};\n\tvar b2=byteAt(0)+byteAt(1);\n\tvar b4=byteAt(2)+byteAt(3);\n\t\n\tif(!/^1{11}/.test(b2)){//未发现帧同步\n\t\treturn null;\n\t};\n\tvar version=({\"00\":2.5,\"10\":2,\"11\":1})[b2.substr(11,2)];\n\tvar layer=({\"01\":3})[b2.substr(13,2)];//仅支持Layer3\n\tvar sampleRate=({ //lamejs -> Tables.samplerate_table\n\t\t\"1\":[44100, 48000, 32000]\n\t\t,\"2\":[22050, 24000, 16000]\n\t\t,\"2.5\":[11025, 12000, 8000]\n\t})[version];\n\tsampleRate&&(sampleRate=sampleRate[parseInt_ES3(b4.substr(4,2),2)]);\n\tvar bitRate=[ //lamejs -> Tables.bitrate_table\n\t\t[0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160] //MPEG 2 2.5\n\t\t,[0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320]//MPEG 1\n\t][version==1?1:0][parseInt_ES3(b4.substr(0,4),2)];\n\t\n\tif(!version || !layer || !bitRate || !sampleRate){\n\t\treturn null;\n\t};\n\t\n\tvar duration=Math.round(length*8/bitRate);\n\tvar frame=layer==1?384:layer==2?1152:version==1?1152:576;\n\tvar frameDurationFloat=frame/sampleRate*1000;\n\tvar frameSize=Math.floor((frame*bitRate)/8/sampleRate*1000);\n\t\n\t//检测是否存在Layer3帧填充1字节。这里只获取第二帧的填充信息，首帧永远没有填充。其他帧可能隔一帧出现一个填充，或者隔很多帧出现一个填充；目测是取决于frameSize未舍入时的小数部分，因为有些采样率的frameSize会出现小数（11025、22050、44100 典型的除不尽），然后字节数无法表示这种小数，就通过一定步长来填充弥补小数部分丢失\n\tvar hasPadding=0,seek=0;\n\tfor(var i=0;i<mp3Buffers.length;i++){\n\t\t//寻找第二帧\n\t\tvar buf=mp3Buffers[i];\n\t\tseek+=buf.byteLength;\n\t\tif(seek>=frameSize+3){\n\t\t\tvar buf8=new Uint8Array(buf);\n\t\t\tvar idx=buf.byteLength-(seek-(frameSize+3)+1);\n\t\t\tvar ib4=byteAt(idx,buf8);\n\t\t\thasPadding=ib4.charAt(6)==\"1\";\n\t\t\tbreak;\n\t\t};\n\t};\n\tif(hasPadding){\n\t\tframeSize++;\n\t};\n\t\n\t\n\treturn {\n\t\tversion:version //1 2 2.5 -> MPEG1 MPEG2 MPEG2.5\n\t\t,layer:layer//3 -> Layer3\n\t\t,sampleRate:sampleRate //采样率 hz\n\t\t,bitRate:bitRate //比特率 kbps\n\t\t\n\t\t,duration:duration //音频时长 ms\n\t\t,size:length //总长度 byte\n\t\t,hasPadding:hasPadding //是否存在1字节填充，首帧永远没有，这个值其实代表的第二帧是否有填充，并不代表其他帧的\n\t\t,frameSize:frameSize //每帧最大长度，含可能存在的1字节padding byte\n\t\t,frameDurationFloat:frameDurationFloat //每帧时长，含小数 ms\n\t};\n};\n\n//去掉lamejs开头的标记信息帧，免得mp3解码出来的时长比pcm的长太多\nvar mp3TrimFix={//minfiy keep name\nrm:Recorder.mp3ReadMeta\n,fn:function(mp3Buffers,length,pcmLength,pcmSampleRate){\n\tvar meta=this.rm(mp3Buffers,length);\n\tif(!meta){\n\t\treturn {size:length, err:\"mp3 unknown format\"};\n\t};\n\tvar pcmDuration=Math.round(pcmLength/pcmSampleRate*1000);\n\t\n\t//开头多出这么多帧，移除掉；正常情况下最多为2帧\n\tvar num=Math.floor((meta.duration-pcmDuration)/meta.frameDurationFloat);\n\tif(num>0){\n\t\tvar size=num*meta.frameSize-(meta.hasPadding?1:0);//首帧没有填充，第二帧可能有填充，这里假设最多为2帧（测试并未出现3帧以上情况），其他帧不管，就算出现了并且导致了错误后面自动容错\n\t\tlength-=size;\n\t\tvar arr0=0,arrs=[];\n\t\tfor(var i=0;i<mp3Buffers.length;i++){\n\t\t\tvar arr=mp3Buffers[i];\n\t\t\tif(size<=0){\n\t\t\t\tbreak;\n\t\t\t};\n\t\t\tif(size>=arr.byteLength){\n\t\t\t\tsize-=arr.byteLength;\n\t\t\t\tarrs.push(arr);\n\t\t\t\tmp3Buffers.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}else{\n\t\t\t\tmp3Buffers[i]=arr.slice(size);\n\t\t\t\tarr0=arr;\n\t\t\t\tsize=0;\n\t\t\t};\n\t\t};\n\t\tvar checkMeta=this.rm(mp3Buffers,length);\n\t\tif(!checkMeta){\n\t\t\t//还原变更，应该不太可能会出现\n\t\t\tarr0&&(mp3Buffers[0]=arr0);\n\t\t\tfor(var i=0;i<arrs.length;i++){\n\t\t\t\tmp3Buffers.splice(i,0,arrs[i]);\n\t\t\t};\n\t\t\tmeta.err=\"mp3 fix error: 已还原，错误原因不明\"; //worker里面没$T翻译\n\t\t};\n\t\t\n\t\tvar fix=meta.trimFix={};\n\t\tfix.remove=num;\n\t\tfix.removeDuration=Math.round(num*meta.frameDurationFloat);\n\t\tfix.duration=Math.round(length*8/meta.bitRate);\n\t};\n\treturn meta;\n}\n};\nvar mp3TrimFixSetMeta=function(meta,set){\n\tvar tag=\"MP3 Info: \";\n\tif(meta.sampleRate&&meta.sampleRate!=set.sampleRate || meta.bitRate&&meta.bitRate!=set.bitRate){\n\t\tRecorder.CLog(tag+$T(\"uY9i::和设置的不匹配{1}，已更新成{2}\",0,\"set:\"+set.bitRate+\"kbps \"+set.sampleRate+\"hz\",\"set:\"+meta.bitRate+\"kbps \"+meta.sampleRate+\"hz\"),3,set);\n\t\tset.sampleRate=meta.sampleRate;\n\t\tset.bitRate=meta.bitRate;\n\t};\n\t\n\tvar trimFix=meta.trimFix;\n\tif(trimFix){\n\t\ttag+=$T(\"iMSm::Fix移除{1}帧\",0,trimFix.remove)+\" \"+trimFix.removeDuration+\"ms -> \"+trimFix.duration+\"ms\";\n\t\tif(trimFix.remove>2){\n\t\t\tmeta.err=(meta.err?meta.err+\", \":\"\")+$T(\"b9zm::移除帧数过多\");\n\t\t};\n\t}else{\n\t\ttag+=(meta.duration||\"-\")+\"ms\";\n\t};\n\t\n\tif(meta.err){\n\t\tRecorder.CLog(tag,meta.size?1:0,meta.err,meta);\n\t}else{\n\t\tRecorder.CLog(tag,meta);\n\t};\n};\n\n\n\t\n}));"],
  "mappings": ";CAQC,SAAS,SAAQ;AACjB,MAAI,UAAQ,OAAO,UAAQ,YAAY,CAAC,CAAC,OAAO;AAChD,MAAI,MAAI,UAAQ,SAAO;AACvB,MAAI,MAAI,IAAI,UAAS,KAAG,IAAI;AAC5B,UAAQ,KAAI,IAAG,GAAG,IAAG,OAAO;AAC7B,GAAE,SAAS,UAAS,MAAK,IAAG,WAAU;AACtC;AAEA,MAAI,UAAQ;AACZ,MAAI,OAAK;AACT,WAAS,UAAU,UAAQ;AAAA,IAC1B,QAAO;AAAA,IAAK,QAAO;AAAA,IAClB,YAAW,WAAU;AACrB,aAAO,GAAG,mEAAkE,GAAE,SAAQ,IAAI;AAAA,IAC3F;AAAA,EACD;AAEA,MAAI,eAAa,SAAS,KAAI;AAC7B,QAAI,KAAG,IAAI,SAAS,KAAG,IAAI,YAAW,IAAE;AACxC,SAAI,MAAI,OAAK,KAAK,QAAQ,MAAI,KAAG,GAAG,KAAG,IAAG;AACzC,eAAS,KAAK,GAAG,6BAA4B,GAAE,aAAW,IAAG,IAAI,GAAE,CAAC;AAAA,IACrE;AACA,SAAI,MAAI,UAAQ,KAAK,QAAQ,MAAI,KAAG,GAAG,KAAG,IAAG;AAC5C,UAAI,MAAI,QAAQ,MAAM,IAAI,GAAE,KAAG,CAAC;AAChC,eAAQ,IAAE,GAAE,IAAE,IAAI,QAAO,IAAK,IAAG,KAAK,EAAC,GAAE,CAAC,IAAI,CAAC,GAAE,GAAE,KAAK,IAAI,IAAI,CAAC,IAAE,EAAE,EAAC,CAAC;AACvE,SAAG,KAAK,SAAS,GAAE,GAAE;AAAC,eAAO,EAAE,IAAE,EAAE;AAAA,MAAC,CAAC;AAAG,UAAE,GAAG,CAAC,EAAE;AAEhD,UAAI,aAAW;AACf,eAAS,KAAK,GAAG,iDAAgD,GAAE,GAAE,IAAG,OAAO,GAAE,CAAC;AAAA,IACnF;AAAA,EACD;AACA,MAAI,kBAAgB,WAAU;AAC7B,WAAO,GAAG,EAAE,gBAAe,CAAC,UAAS,0BAA0B,CAAC;AAAA,EACjE;AAEA,MAAI,eAAa,aAAa,OAAO,UAAQ;AAM7C,WAAS,UAAU,MAAI,SAAS,KAAI,MAAK,OAAM;AAC7C,QAAI,OAAK,MAAK,MAAI,KAAK,KAAI,OAAK,IAAI;AACpC,QAAG,CAAC,SAAS,QAAO;AACnB,YAAM,gBAAgB,CAAC;AAAG;AAAA,IAC3B;AAAC;AAGD,QAAG,cAAa;AACf,UAAI,MAAI,KAAK,UAAU,GAAG;AAC1B,UAAG,KAAI;AACN,YAAG,IAAI,KAAI;AACV,eAAK,WAAW,KAAI,GAAG;AACvB,eAAK,aAAa,KAAI,MAAK,OAAM,CAAC;AAClC;AAAA,QACD;AACA,aAAK,SAAS,GAAG;AAAA,MAClB;AAAC;AAAA,IACF;AAAC;AAED,iBAAa,GAAG;AAGhB,QAAI,MAAI,IAAI,SAAS,OAAO,WAAW,GAAE,IAAI,YAAW,IAAI,OAAO;AAEnE,QAAI,YAAU;AACd,QAAI,SAAO,IAAI,UAAU,GAAM,GAAG,UAAQ;AAE1C,QAAI,MAAI,GAAE,UAAQ;AAClB,QAAI,MAAI,WAAU;AACjB,UAAG;AACF,YAAG,MAAI,MAAK;AACX,cAAI,MAAI,IAAI,aAAa,IAAI,SAAS,KAAI,MAAI,SAAS,CAAC;AAAA,QACzD,OAAK;AACJ,oBAAQ;AACR,cAAI,MAAI,IAAI,MAAM;AAAA,QACnB;AAAC;AAAA,MACF,SAAO,GAAE;AACR,gBAAQ,MAAM,CAAC;AACf,YAAG,CAAC,QAAS,KAAG;AAAE,cAAI,MAAM;AAAA,QAAE,SAAO,GAAE;AAAE,kBAAQ,MAAM,CAAC;AAAA,QAAE;AAC1D,cAAM,kBAAgB,EAAE,OAAO;AAC/B;AAAA,MACD;AAAC;AACD,UAAI,SAAO,IAAI;AACf,UAAG,SAAO,GAAE;AACX,YAAG,UAAQ,SAAO,OAAO,QAAO;AAC/B,cAAI,MAAI,IAAI,UAAU,OAAO,SAAO,KAAK,IAAI,KAAO,MAAM,CAAC;AAC3D,cAAI,IAAI,OAAO,SAAS,GAAG,OAAO,CAAC;AACnC,mBAAO;AAAA,QACR;AACA,eAAO,IAAI,KAAI,OAAO;AACtB,mBAAS;AAAA,MACV;AAAC;AAED,UAAG,MAAI,MAAK;AACX,eAAK;AACL,mBAAW,GAAG;AAAA,MACf,OAAK;AACJ,YAAI,OAAK,CAAC,OAAO,OAAO,MAAM,GAAE,OAAO,CAAC;AAExC,YAAI,OAAK,WAAW,GAAG,MAAK,SAAQ,MAAK,IAAI,UAAU;AACvD,0BAAkB,MAAK,GAAG;AAE1B,aAAK,KAAK,CAAC,KAAG,IAAI,YAAY,CAAC,GAAE,WAAW;AAAA,MAC7C;AAAC;AAAA,IACF;AACA,QAAI;AAAA,EACL;AAMD,MAAI;AACJ,WAAS,YAAY,aAAY,WAAU;AAC1C,QAAG,WAAU;AACZ,eAAS,KAAK,mBAAmB;AACjC,gBAAU,UAAU;AACpB,kBAAU;AAAA,IACX;AAAC;AAAA,EACF,CAAC;AAGD,WAAS,UAAU,eAAa,SAAS,SAAQ,KAAI;AACpD,QAAI,SAAO;AAEX,QAAG,IAAI,oBAAmB;AACzB,UAAG,CAAC,WAAW,GAAE;AAChB,iBAAO,GAAG,wBAAwB;AAAA,MACnC;AAAC;AAAA,IACF;AAAC;AACD,QAAG,CAAC,UAAU,CAAC,SAAS,QAAO;AAC9B,eAAO,gBAAgB;AAAA,IACxB;AAAC;AACD,WAAO;AAAA,EACR;AACA,WAAS,UAAU,YAAU,SAAS,KAAI;AACzC,WAAO,WAAW,GAAG;AAAA,EACtB;AACA,MAAI,WAAS,EAAC,IAAG,EAAC;AAClB,MAAI,aAAW,SAAS,WAAU,OAAM;AAEvC,QAAI,MAAI,SAAS,GAAE;AAClB,UAAI,KAAG,EAAE;AACT,UAAI,UAAQ,MAAM,QAAQ;AAC1B,UAAI,UAAQ,MAAM,QAAQ;AAC1B,UAAI,gBAAc,MAAM,QAAQ;AAEhC,UAAI,MAAI,QAAQ,GAAG,EAAE;AACrB,UAAG,GAAG,UAAQ,QAAO;AACpB,gBAAQ,GAAG,EAAE,IAAE;AAAA,UACd,YAAW,GAAG;AAAA,UACb,SAAQ,GAAG;AAAA,UACX,SAAQ,GAAG;AAAA,UAEX,SAAQ;AAAA,UACR,QAAO,IAAI,UAAU,GAAM;AAAA,UAAG,SAAQ;AAAA,UACtC,QAAO,IAAI,QAAQ,WAAW,GAAE,GAAG,YAAW,GAAG,OAAO;AAAA,QAC1D;AAAA,MACD,WAAS,CAAC,KAAI;AACb;AAAA,MACD;AAAC;AACD,UAAI,WAAS,SAASA,MAAI;AACzB,YAAI,SAAOA,KAAI;AACf,YAAG,IAAI,UAAQ,SAAO,IAAI,OAAO,QAAO;AACvC,cAAI,MAAI,IAAI,UAAU,IAAI,OAAO,SAAO,KAAK,IAAI,KAAO,MAAM,CAAC;AAC/D,cAAI,IAAI,IAAI,OAAO,SAAS,GAAG,IAAI,OAAO,CAAC;AAC3C,cAAI,SAAO;AAAA,QACZ;AACA,YAAI,OAAO,IAAIA,MAAI,IAAI,OAAO;AAC9B,YAAI,WAAS;AAAA,MACd;AAEA,cAAO,GAAG,QAAO;AAAA,QACjB,KAAK;AACJ,cAAG,CAAC,IAAI,KAAM,KAAG;AAAE,gBAAI,OAAO,MAAM;AAAA,UAAE,SAAOC,IAAE;AAAE,oBAAQ,MAAMA,EAAC;AAAA,UAAE;AAClE,cAAI,SAAO;AACX,iBAAO,QAAQ,GAAG,EAAE;AACpB;AAAA,QACD,KAAK;AACJ,cAAG,IAAI,KAAK;AACZ,cAAI,WAAS,GAAG,IAAI;AACpB,cAAG;AACF,gBAAI,MAAI,IAAI,OAAO,aAAa,GAAG,GAAG;AAAA,UACvC,SAAOA,IAAE;AACR,gBAAI,MAAIA;AACR,oBAAQ,MAAMA,EAAC;AAAA,UAChB;AAAC;AACD,cAAG,OAAO,IAAI,SAAO,GAAE;AACtB,gBAAG,IAAI,SAAQ;AACd,qBAAO,UAAU,EAAC,QAAO,WAAU,IAAG,GAAG,IAAG,OAAM,IAAG,CAAC;AAAA,YACvD,OAAK;AACJ,uBAAS,GAAG;AAAA,YACb;AAAC;AAAA,UACF;AAAC;AACD;AAAA,QACD,KAAK;AACJ,cAAI,OAAK;AACT,cAAG;AACF,gBAAI,MAAI,IAAI,OAAO,MAAM;AAAA,UAC1B,SAAOA,IAAE;AACR,gBAAI,MAAIA;AACR,oBAAQ,MAAMA,EAAC;AAAA,UAChB;AAAC;AACD,cAAG,OAAO,IAAI,SAAO,GAAE;AACtB,gBAAG,IAAI,SAAQ;AACd,qBAAO,UAAU,EAAC,QAAO,WAAU,IAAG,GAAG,IAAG,OAAM,IAAG,CAAC;AAAA,YACvD,OAAK;AACJ,uBAAS,GAAG;AAAA,YACb;AAAC;AAAA,UACF;AAAC;AACD,cAAG,IAAI,KAAI;AACV,mBAAO,UAAU;AAAA,cAAC,QAAO,GAAG;AAAA,cAAO,IAAG,GAAG;AAAA,cACvC,KAAI,kBAAgB,IAAI,IAAI;AAAA,YAAO,CAAC;AACtC;AAAA,UACD;AAAC;AAED,cAAI,OAAK,CAAC,IAAI,OAAO,OAAO,MAAM,GAAE,IAAI,OAAO,CAAC;AAEhD,cAAI,OAAK,cAAc,GAAG,MAAK,IAAI,SAAQ,IAAI,SAAQ,IAAI,UAAU;AAErE,iBAAO,UAAU;AAAA,YAChB,QAAO,GAAG;AAAA,YACT,IAAG,GAAG;AAAA,YACN,MAAK,KAAK,CAAC,KAAG,IAAI,YAAY,CAAC;AAAA,YAC/B;AAAA,UACF,CAAC;AACD;AAAA,MACD;AAAC;AAAA,IACF;AAEA,QAAI,YAAU,SAAS,KAAI;AAC1B,aAAO,YAAU,SAAS,GAAE;AAC3B,YAAI,OAAK;AAAG,YAAG,IAAI,QAAK,EAAE;AAC1B,YAAIC,OAAI,SAAS,KAAK,EAAE;AACxB,YAAGA,MAAI;AACN,cAAG,KAAK,UAAQ,WAAU;AAEzB,YAAAA,KAAI,IAAI,mBAAmB,IAAI,WAAW,KAAK,MAAM,MAAM,CAAC;AAAA,UAC7D,OAAK;AAEJ,YAAAA,KAAI,QAAMA,KAAI,KAAK,IAAI;AACvB,YAAAA,KAAI,OAAK;AAAA,UACV;AAAC;AAAA,QACF;AAAC;AAAA,MACF;AAAA,IACD;AACA,QAAI,UAAQ,WAAU;AACrB,UAAIA,OAAI,EAAC,QAAc,KAAI,UAAS;AACpC,UAAG,WAAU;AACZ,QAAAA,KAAI,KAAG,EAAE,SAAS;AAClB,iBAASA,KAAI,EAAE,IAAEA;AAEjB,qBAAa,SAAS;AAEtB,eAAO,YAAY;AAAA,UAClB,QAAO;AAAA,UACN,IAAGA,KAAI;AAAA,UACP,YAAW,UAAU;AAAA,UACrB,SAAQ,UAAU;AAAA,UAClB,SAAQ,CAAC,CAAC,UAAU;AAAA,UAEpB,GAAE,IAAI,WAAW,CAAC;AAAA;AAAA,QACpB,CAAC;AAAA,MACF,OAAK;AACJ,eAAO,YAAY;AAAA,UAClB,GAAE,IAAI,WAAW,CAAC;AAAA;AAAA,QACnB,CAAC;AAAA,MACF;AAAC;AACD,aAAOA;AAAA,IACR;AACA,QAAI,OAAM,SAAO;AAGjB,QAAG,SAAS,CAAC,cAAa;AACzB,eAAS,KAAK,GAAG,yCAAyC,GAAE,CAAC;AAC7D,eAAO,EAAE,aAAY,SAAS,IAAG;AAAE,YAAI,EAAC,MAAK,GAAE,CAAC;AAAA,MAAG,EAAE;AACrD,cAAM,EAAC,SAAQ;AAAA,QACd,SAAQ,CAAC;AAAA,QAAG,SAAQ,SAAS;AAAA,QAAQ,eAAc;AAAA,MACpD,EAAC;AACD,gBAAU;AACV,aAAO,QAAQ;AAAA,IAChB;AAAC;AAED,QAAG;AACF,UAAG,CAAC,QAAO;AAEV,YAAI,SAAO,MAAI,IAAI,QAAQ,uBAAsB,kBAAkB;AACnE,gBAAM,MAAM,QAAQ,qBAAoB,SAAS;AACjD,YAAI,SAAO,gCAA8B;AACzC,kBAAQ;AACR,kBAAQ,wBAAsB,WAAW,KAAG,SAAO,WAAW,KAAG;AAEjE,YAAI,aAAW,SAAS,OAAO,SAAS;AACxC,YAAI,OAAK,OAAO,OAAK,WAAW,gBAAgB,IAAI,KAAK,CAAC,iBAAgB,YAAW,MAAM,GAAG,EAAC,MAAK,kBAAiB,CAAC,CAAC;AAEvH,iBAAO,IAAI,OAAO,GAAG;AACrB,mBAAW,WAAU;AACpB,WAAC,OAAO,OAAK,WAAW,gBAAgB,GAAG;AAAA,QAC5C,GAAE,GAAK;AACP,kBAAU,CAAC;AAAA,MACZ;AAAC;AAED,UAAI,MAAI,QAAQ;AAAG,UAAI,MAAI;AAC3B,kBAAU;AACV,aAAO;AAAA,IACR,SAAO,GAAE;AACR,gBAAQ,OAAO,UAAU;AACzB,cAAQ,MAAM,CAAC;AACf,aAAO,WAAW,WAAW,CAAC;AAAA,IAC/B;AAAC;AAAA,EACF;AACA,WAAS,UAAU,WAAS,SAAS,UAAS;AAC7C,QAAG,YAAU,SAAS,QAAO;AAC5B,eAAS,OAAO,YAAY;AAAA,QAC3B,QAAO;AAAA,QACN,IAAG,SAAS;AAAA,MACd,CAAC;AACD,eAAS,SAAO;AAChB,aAAO,SAAS,SAAS,EAAE;AAG3B,UAAI,QAAM;AACV,eAAQ,KAAK,UAAS;AACrB;AAAA,MACD;AAAC;AACD,UAAG,OAAM;AACR,iBAAS,KAAK,GAAG,8BAA6B,GAAE,KAAK,GAAE,CAAC;AAAA,MACzD;AAAC;AAAA,IACF;AAAC;AAAA,EACF;AACA,WAAS,UAAU,aAAW,SAAS,UAAS,KAAI;AACnD,QAAG,YAAU,SAAS,QAAO;AAC5B,eAAS,OAAO,YAAY;AAAA,QAC3B,QAAO;AAAA,QACN,IAAG,SAAS;AAAA,QACZ;AAAA,MACF,CAAC;AAAA,IACF;AAAC;AAAA,EACF;AACA,WAAS,UAAU,eAAa,SAAS,UAAS,MAAK,OAAM,UAAS;AACrE,QAAI,OAAK;AACT,QAAG,YAAU,SAAS,QAAO;AAC5B,eAAS,OAAK,SAAS,MAAK;AAC3B,YAAG,UAAS;AACX,eAAK,SAAS,QAAQ;AAAA,QACvB;AAAC;AACD,YAAG,KAAK,KAAI;AACX,gBAAM,KAAK,GAAG;AAAA,QACf,OAAK;AACJ,4BAAkB,KAAK,MAAK,SAAS,GAAG;AACxC,eAAK,KAAK,MAAK,WAAW;AAAA,QAC3B;AAAC;AAAA,MACF;AACA,eAAS,OAAO,YAAY;AAAA,QAC3B,QAAO;AAAA,QACN,IAAG,SAAS;AAAA,MACd,CAAC;AAAA,IACF,OAAK;AACJ,YAAM,GAAG,oBAAoB,CAAC;AAAA,IAC/B;AAAC;AAAA,EACF;AAcA,WAAS,cAAY,SAAS,YAAW,QAAO;AAE/C,QAAI,eAAa,OAAO,UAAS,eAAa,OAAO,YAAU,OAAO,QAAO,eAAa,KAAK,YAAU;AAEzG,QAAI,SAAO,IAAI,WAAW,WAAW,CAAC,KAAG,CAAC,CAAC;AAC3C,QAAG,OAAO,SAAO,GAAE;AAClB,aAAO;AAAA,IACR;AAAC;AACD,QAAI,SAAO,SAASC,MAAI,IAAG;AAC1B,cAAQ,cAAY,MAAI,QAAQA,IAAG,KAAG,GAAG,SAAS,CAAC,GAAG,OAAO,EAAE;AAAA,IAChE;AACA,QAAI,KAAG,OAAO,CAAC,IAAE,OAAO,CAAC;AACzB,QAAI,KAAG,OAAO,CAAC,IAAE,OAAO,CAAC;AAEzB,QAAG,CAAC,SAAS,KAAK,EAAE,GAAE;AACrB,aAAO;AAAA,IACR;AAAC;AACD,QAAI,UAAS,EAAC,MAAK,KAAI,MAAK,GAAE,MAAK,EAAC,EAAG,GAAG,OAAO,IAAG,CAAC,CAAC;AACtD,QAAI,QAAO,EAAC,MAAK,EAAC,EAAG,GAAG,OAAO,IAAG,CAAC,CAAC;AACpC,QAAI,aAAY;AAAA;AAAA,MACf,KAAI,CAAC,OAAO,MAAO,IAAK;AAAA,MACvB,KAAI,CAAC,OAAO,MAAO,IAAK;AAAA,MACxB,OAAM,CAAC,OAAO,MAAO,GAAI;AAAA,IAC3B,EAAG,OAAO;AACV,mBAAa,aAAW,WAAW,aAAa,GAAG,OAAO,GAAE,CAAC,GAAE,CAAC,CAAC;AACjE,QAAI,UAAQ;AAAA;AAAA,MACX,CAAC,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAG;AAAA,MAC5D,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA;AAAA,IACnE,EAAE,WAAS,IAAE,IAAE,CAAC,EAAE,aAAa,GAAG,OAAO,GAAE,CAAC,GAAE,CAAC,CAAC;AAEhD,QAAG,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,YAAW;AAChD,aAAO;AAAA,IACR;AAAC;AAED,QAAI,WAAS,KAAK,MAAM,SAAO,IAAE,OAAO;AACxC,QAAI,QAAM,SAAO,IAAE,MAAI,SAAO,IAAE,OAAK,WAAS,IAAE,OAAK;AACrD,QAAI,qBAAmB,QAAM,aAAW;AACxC,QAAI,YAAU,KAAK,MAAO,QAAM,UAAS,IAAE,aAAW,GAAI;AAG1D,QAAI,aAAW,GAAE,OAAK;AACtB,aAAQ,IAAE,GAAE,IAAE,WAAW,QAAO,KAAI;AAEnC,UAAI,MAAI,WAAW,CAAC;AACpB,cAAM,IAAI;AACV,UAAG,QAAM,YAAU,GAAE;AACpB,YAAI,OAAK,IAAI,WAAW,GAAG;AAC3B,YAAI,MAAI,IAAI,cAAY,QAAM,YAAU,KAAG;AAC3C,YAAI,MAAI,OAAO,KAAI,IAAI;AACvB,qBAAW,IAAI,OAAO,CAAC,KAAG;AAC1B;AAAA,MACD;AAAC;AAAA,IACF;AAAC;AACD,QAAG,YAAW;AACb;AAAA,IACD;AAAC;AAGD,WAAO;AAAA,MACN;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,MACA,MAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IACF;AAAA,EACD;AAGA,MAAI,aAAW;AAAA;AAAA,IACf,IAAG,SAAS;AAAA,IACX,IAAG,SAAS,YAAW,QAAO,WAAU,eAAc;AACtD,UAAI,OAAK,KAAK,GAAG,YAAW,MAAM;AAClC,UAAG,CAAC,MAAK;AACR,eAAO,EAAC,MAAK,QAAQ,KAAI,qBAAoB;AAAA,MAC9C;AAAC;AACD,UAAI,cAAY,KAAK,MAAM,YAAU,gBAAc,GAAI;AAGvD,UAAI,MAAI,KAAK,OAAO,KAAK,WAAS,eAAa,KAAK,kBAAkB;AACtE,UAAG,MAAI,GAAE;AACR,YAAI,OAAK,MAAI,KAAK,aAAW,KAAK,aAAW,IAAE;AAC/C,kBAAQ;AACR,YAAI,OAAK,GAAE,OAAK,CAAC;AACjB,iBAAQ,IAAE,GAAE,IAAE,WAAW,QAAO,KAAI;AACnC,cAAI,MAAI,WAAW,CAAC;AACpB,cAAG,QAAM,GAAE;AACV;AAAA,UACD;AAAC;AACD,cAAG,QAAM,IAAI,YAAW;AACvB,oBAAM,IAAI;AACV,iBAAK,KAAK,GAAG;AACb,uBAAW,OAAO,GAAE,CAAC;AACrB;AAAA,UACD,OAAK;AACJ,uBAAW,CAAC,IAAE,IAAI,MAAM,IAAI;AAC5B,mBAAK;AACL,mBAAK;AAAA,UACN;AAAC;AAAA,QACF;AAAC;AACD,YAAI,YAAU,KAAK,GAAG,YAAW,MAAM;AACvC,YAAG,CAAC,WAAU;AAEb,mBAAO,WAAW,CAAC,IAAE;AACrB,mBAAQ,IAAE,GAAE,IAAE,KAAK,QAAO,KAAI;AAC7B,uBAAW,OAAO,GAAE,GAAE,KAAK,CAAC,CAAC;AAAA,UAC9B;AAAC;AACD,eAAK,MAAI;AAAA,QACV;AAAC;AAED,YAAI,MAAI,KAAK,UAAQ,CAAC;AACtB,YAAI,SAAO;AACX,YAAI,iBAAe,KAAK,MAAM,MAAI,KAAK,kBAAkB;AACzD,YAAI,WAAS,KAAK,MAAM,SAAO,IAAE,KAAK,OAAO;AAAA,MAC9C;AAAC;AACD,aAAO;AAAA,IACR;AAAA,EACA;AACA,MAAI,oBAAkB,SAAS,MAAK,KAAI;AACvC,QAAI,MAAI;AACR,QAAG,KAAK,cAAY,KAAK,cAAY,IAAI,cAAc,KAAK,WAAS,KAAK,WAAS,IAAI,SAAQ;AAC9F,eAAS,KAAK,MAAI,GAAG,4BAA2B,GAAE,SAAO,IAAI,UAAQ,UAAQ,IAAI,aAAW,MAAK,SAAO,KAAK,UAAQ,UAAQ,KAAK,aAAW,IAAI,GAAE,GAAE,GAAG;AACxJ,UAAI,aAAW,KAAK;AACpB,UAAI,UAAQ,KAAK;AAAA,IAClB;AAAC;AAED,QAAI,UAAQ,KAAK;AACjB,QAAG,SAAQ;AACV,aAAK,GAAG,mBAAkB,GAAE,QAAQ,MAAM,IAAE,MAAI,QAAQ,iBAAe,WAAS,QAAQ,WAAS;AACjG,UAAG,QAAQ,SAAO,GAAE;AACnB,aAAK,OAAK,KAAK,MAAI,KAAK,MAAI,OAAK,MAAI,GAAG,cAAc;AAAA,MACvD;AAAC;AAAA,IACF,OAAK;AACJ,cAAM,KAAK,YAAU,OAAK;AAAA,IAC3B;AAAC;AAED,QAAG,KAAK,KAAI;AACX,eAAS,KAAK,KAAI,KAAK,OAAK,IAAE,GAAE,KAAK,KAAI,IAAI;AAAA,IAC9C,OAAK;AACJ,eAAS,KAAK,KAAI,IAAI;AAAA,IACvB;AAAC;AAAA,EACF;AAIA,CAAC;",
  "names": ["buf", "e", "ctx", "idx"]
}
